package zxrfqv3

// To detect tradelog of zeroxv3. We will look into the event log output, if the event log has address is the gasless or
// swap contract address and has no topic (as log0), we will consider it as a trade log.
// log0 only emit when call though function execute or executeMetaTxn, so in the implementation, we will check
// function selector (first 4 bytes) of input data is equal to execute or executeMetaTxn function selector.

// function execute((address,address,uint256) slippage, bytes[] actions, bytes32 zid): selector = 0x1fff991f
// function executeMetaTxn((address,address,uint256) slippage, bytes[] actions, bytes32 zid): selector = 0xfd3ad6d4
// However, there is an exception when decoding the input of these functions. The actions parameter is of type bytes[],
// which means it has dynamic data size. This can lead to a situation where the first byte in actions may
// indicate an overflow in the data size. In other words, the indicated data size could be larger than the actual
// input data, causing ABI decoding to fail and return an error.
// To handle this case, we need to detect the offset of each bytes element in the actions array.
// If the size of an action exceeds the size of the input data, we will cap it to the maximum available size of the input.

// Detail implement: DecodeExecuteInput(input string) ([][]byte, bool, error)
// 1) check the input size contain the function selector (execute, executeMetaTxn)
// 2) the format of input will be: selector + slippage + actions metadata + zid + byte data of actions
// 3) with fixed size data like slippage and byte32 each parameter will have fixed size is 32 bytes we call it is paddingByteSize
// we will move the offset out of slippage
// 4) the next paddingByteSize bytes will be the size of actions we will call it actionsSize,
// the baseOffset is next paddingByteSize bytes after actionsSize
// 5) for loop the actionsSize to detect the offset of each action
// 6) for each action, we need to calculate 2 thing:
//	  + startOffset: baseOffset + it's offset + 32 bytes (paddingByteSize)
//	  + actionSize: max(len(input), int(startOffset + 32))
// 	 action = input[startOffset:actionSize]

// Example: with this https://etherscan.io/tx/0xc7f14f7ef30bea8bc001faff8282a7dc554b0ade37134bfbf5ff2398b1680227
// input data
// 0x1fff991f
// 00000000000000000000000018cf159e1776ca6bdbe6719dace450121b4603b4
// 000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
// 000000000000000000000000000000000000000000000000422ad08e8a6f7eac
// 00000000000000000000000000000000000000000000000000000000000000a0
// 782a7eb7cd1c1f433de4ebb21d49ab0000000000000000000000000000000000
// 0000000000000000000000000000000000000000000000000000000000000008
// 0000000000000000000000000000000000000000000000000000000000000a40
// 0000000000000000000000000000000000000000000000000000000000000100
// 00000000000000000000000000000000000000000000000000000000000002e0
// 0000000000000000000000000000000000000000000000000000000000000400
// 0000000000000000000000000000000000000000000000000000000000000500
// 00000000000000000000000000000000000000000000000000000000000006e0
// 0000000000000000000000000000000000000000000000000000000000000800
// 0000000000000000000000000000000000000000000000000000000000000900
// 00000000000000000000000000000000000000000000000000000000000001a4
// d92aadfb00000000000000000000000070bf6634ee8cb27d04478f184b9b8bb1
// 3e5f4710000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead908
// 3c756cc20000000000000000000000000000000000000000000000001f55c999
// 18ecefcb5eadc11e0a58413e08ff130f38f96d7222b19c0e4d9be7142c02463b
// e0a2b96b00000000000000000000000000000000000000000000000000000000
// 67106e55000000000000000000000000bf19cbf0256f19f39a016a86ff3551ec
// c6f2aafe00000000000000000000000000000000000000000000000000000000
// 00000120000000000000000000000000ee2a03aa6dacf51c18679c516ad5283d
// 8e7c26370000000000000000000000000000000000000000000000000000395a
// f6275dfe00000000000000000000000000000000000000000000000000000000
// 000000410d047835cec04dac44f56755cccc8f32aaf225ccd7b100edb08c5119
// 86e4fab46878c1f6db942268055f16254c5c68866f66b77fb5e131e508a0988d
// 7c2d6b5f1c000000000000000000000000000000000000000000000000000000
// 0000000000000000000000000000000000000000000000000000000000000000
// 00000000000000000000000000000000000000000000000000000000000000e4
// 8d68a15600000000000000000000000070bf6634ee8cb27d04478f184b9b8bb1
// 3e5f471000000000000000000000000000000000000000000000000000000000
// 00000aa700000000000000000000000000000000000000000000000000000000
// 0000008000000000000000000000000000000000000000000000000000000000
// 0000000000000000000000000000000000000000000000000000000000000000
// 0000002cee2a03aa6dacf51c18679c516ad5283d8e7c263700000bb8c02aaa39
// b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000000000000
// 0000000000000000000000000000000000000000000000000000000000000000
// 00000000000000000000000000000000000000000000000000000000000000c4
// 103b48be00000000000000000000000070bf6634ee8cb27d04478f184b9b8bb1
// 3e5f4710000000000000000000000000ee2a03aa6dacf51c18679c516ad5283d
// 8e7c263700000000000000000000000000000000000000000000000000000000
// 000011160000000000000000000000003885fbe4cd8aed7b7e9625923927fa1c
// e30662a300000000000000000000000000000000000000000000000000000000
// 00001e0000000000000000000000000000000000000000000000000000000000
// 0000000000000000000000000000000000000000000000000000000000000000
// 00000000000000000000000000000000000000000000000000000000000001a4
// d92aadfb00000000000000000000000070bf6634ee8cb27d04478f184b9b8bb1
// 3e5f4710000000000000000000000000dac17f958d2ee523a2206206994597c1
// 3d831ec700000000000000000000000000000000000000000000000000000000
// b13acacd5eadc11e0a58413e08ff130f38f96d7222b19c0e4d9be7142c02463b
// e0a2b96c00000000000000000000000000000000000000000000000000000000
// 67106e73000000000000000000000000ff8ba4d1fc3762f6154cc942ccf30049
// a2a0cec600000000000000000000000000000000000000000000000000000000
// 00000120000000000000000000000000ee2a03aa6dacf51c18679c516ad5283d
// 8e7c263700000000000000000000000000000000000000000000000000001cad
// 7b13aeff00000000000000000000000000000000000000000000000000000000
// 0000004187eba24314b44783d2ad45f5fdff9927151419a7bda12a1dd44836b5
// 5ea9a96645427a4c0b261857baa4215119d815ad314947534874ff0560adccf5
// e14c70801b000000000000000000000000000000000000000000000000000000
// 0000000000000000000000000000000000000000000000000000000000000000
// 00000000000000000000000000000000000000000000000000000000000000e4
// 8d68a15600000000000000000000000070bf6634ee8cb27d04478f184b9b8bb1
// 3e5f471000000000000000000000000000000000000000000000000000000000
// 0000271000000000000000000000000000000000000000000000000000000000
// 0000008000000000000000000000000000000000000000000000000000000000
// 0000000000000000000000000000000000000000000000000000000000000000
// 0000002cdac17f958d2ee523a2206206994597c13d831ec7000001f42260fac5
// e5542a773aa44fbcfedf7c193bc2c59900000000000000000000000000000000
// 0000000000000000000000000000000000000000000000000000000000000000
// 00000000000000000000000000000000000000000000000000000000000000c4
// 103b48be00000000000000000000000070bf6634ee8cb27d04478f184b9b8bb1
// 3e5f47100000000000000000000000002260fac5e5542a773aa44fbcfedf7c19
// 3bc2c59900000000000000000000000000000000000000000000000000000000
// 00002710000000000000000000000000ceff51756c56ceffca006cd410b03ffc
// 46dd3a5800000000000000000000000000000000000000000000000000000000
// 00001e0100000000000000000000000000000000000000000000000000000000
// 0000000000000000000000000000000000000000000000000000000000000000
// 0000000000000000000000000000000000000000000000000000000000000104
// 38c9c147000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead908
// 3c756cc200000000000000000000000000000000000000000000000000000000
// 00002710000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead908
// 3c756cc200000000000000000000000000000000000000000000000000000000
// 0000000400000000000000000000000000000000000000000000000000000000
// 000000a000000000000000000000000000000000000000000000000000000000
// 000000242e1a7d4d000000000000000000000000000000000000000000000000
// 0000000000000000000000000000000000000000000000000000000000000000
// 0000000000000000000000000000000000000000000000000000000000000000
// 000000000000000000000000000000000000000000000000000000000000ffff
// c1fb425e00000000000000000000000070bf6634ee8cb27d04478f184b9b8bb1
// 3e5f4710000000000000000000000000ee2a03aa6dacf51c18679c516ad5283d
// 8e7c263700000000000000000000000000000000000000000000000000007f74
// cdacd0df0000000000000000000000000000000000006e898131631616b1779b
// ad70bc2000000000000000000000000000000000000000000000000000000000
// 67106f4500000000000000000000000000000000000000000000000000000000
// 000000c000000000000000000000000000000000000000000000000000000000
// 000000416d386e77ced75ed7c62688f8d0f54b9aca548d508d3bcb7544f7e4dc
// a9fd805c767c90f3076f638ff1adee6e041aee5a3c4545abf078aefdbb72ac76
// 463db76b1c

// input
//selector: 0x1fff991f
//00000000000000000000000018cf159e1776ca6bdbe6719dace450121b4603b4 // 0x0000: receipient padding to 32 bytes
//000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee // 0x0020: by token, padding to 32 bytes
//000000000000000000000000000000000000000000000000422ad08e8a6f7eac // 0x0040: minAmoutOut padding to 32 bytes
//00000000000000000000000000000000000000000000000000000000000000a0 // 0x0060: offset to actions, 0xa0 = 160 = 5 * 32
//782a7eb7cd1c1f433de4ebb21d49ab0000000000000000000000000000000000 // 0x0080: zid bytes32
//
//0000000000000000000000000000000000000000000000000000000000000008 // 0x00a0: start of actions array here(0xa0), slice has 8 elements, following is actions array data, start at 0xa0 + 0x20 = 0xc0 (we call base_offset)
//0000000000000000000000000000000000000000000000000000000000000a40 // 0x00c0: offset to first element(should add with base_offset to get item data => 0xa40 + 0xc0)
//0000000000000000000000000000000000000000000000000000000000000100 // 0x00e0: offset to 2nd -> (offset to 2nd element =  = 0x100 + 0xc0  = 0x1c0)
//00000000000000000000000000000000000000000000000000000000000002e0 // 0x0100  offset to 3rd
//0000000000000000000000000000000000000000000000000000000000000400 // 0x0120: offset to 4th
//0000000000000000000000000000000000000000000000000000000000000500 // 0x0140: offset to 5th
//00000000000000000000000000000000000000000000000000000000000006e0 // 0x0160: offset to 6th
//0000000000000000000000000000000000000000000000000000000000000800 // 0x0180: offset to 7th
//0000000000000000000000000000000000000000000000000000000000000900 // 0x01a0: offset to 8th
//
//00000000000000000000000000000000000000000000000000000000000001a4 // 0x01c0: this is start of 2nd element (the second action), which is a bytes slice with length = 0x1a4, following is its data
//d92aadfb00000000000000000000000070bf6634ee8cb27d04478f184b9b8bb13e5f4710000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000000000000000000000000001f55c99918ecefcb5eadc11e0a58413e08ff130f38f96d7222b19c0e4d9be7142c02463be0a2b96b0000000000000000000000000000000000000000000000000000000067106e55000000000000000000000000bf19cbf0256f19f39a016a86ff3551ecc6f2aafe0000000000000000000000000000000000000000000000000000000000000120000000000000000000000000ee2a03aa6dacf51c18679c516ad5283d8e7c26370000000000000000000000000000000000000000000000000000395af6275dfe00000000000000000000000000000000000000000000000000000000000000410d047835cec04dac44f56755cccc8f32aaf225ccd7b100edb08c511986e4fab46878c1f6db942268055f16254c5c68866f66b77fb5e131e508a0988d7c2d6b5f1c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e48d68a15600000000000000000000000070bf6634ee8cb27d04478f184b9b8bb13e5f47100000000000000000000000000000000000000000000000000000000000000aa700000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002cee2a03aa6dacf51c18679c516ad5283d8e7c263700000bb8c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c4103b48be00000000000000000000000070bf6634ee8cb27d04478f184b9b8bb13e5f4710000000000000000000000000ee2a03aa6dacf51c18679c516ad5283d8e7c263700000000000000000000000000000000000000000000000000000000000011160000000000000000000000003885fbe4cd8aed7b7e9625923927fa1ce30662a30000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001a4d92aadfb00000000000000000000000070bf6634ee8cb27d04478f184b9b8bb13e5f4710000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec700000000000000000000000000000000000000000000000000000000b13acacd5eadc11e0a58413e08ff130f38f96d7222b19c0e4d9be7142c02463be0a2b96c0000000000000000000000000000000000000000000000000000000067106e73000000000000000000000000ff8ba4d1fc3762f6154cc942ccf30049a2a0cec60000000000000000000000000000000000000000000000000000000000000120000000000000000000000000ee2a03aa6dacf51c18679c516ad5283d8e7c263700000000000000000000000000000000000000000000000000001cad7b13aeff000000000000000000000000000000000000000000000000000000000000004187eba24314b44783d2ad45f5fdff9927151419a7bda12a1dd44836b55ea9a96645427a4c0b261857baa4215119d815ad314947534874ff0560adccf5e14c70801b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e48d68a15600000000000000000000000070bf6634ee8cb27d04478f184b9b8bb13e5f4710000000000000000000000000000000000000000000000000000000000000271000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002cdac17f958d2ee523a2206206994597c13d831ec7000001f42260fac5e5542a773aa44fbcfedf7c193bc2c59900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c4103b48be00000000000000000000000070bf6634ee8cb27d04478f184b9b8bb13e5f47100000000000000000000000002260fac5e5542a773aa44fbcfedf7c193bc2c5990000000000000000000000000000000000000000000000000000000000002710000000000000000000000000ceff51756c56ceffca006cd410b03ffc46dd3a580000000000000000000000000000000000000000000000000000000000001e01000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010438c9c147000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000000000000000000000000000000000000002710000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000242e1a7d4d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffc1fb425e00000000000000000000000070bf6634ee8cb27d04478f184b9b8bb13e5f4710000000000000000000000000ee2a03aa6dacf51c18679c516ad5283d8e7c263700000000000000000000000000000000000000000000000000007f74cdacd0df0000000000000000000000000000000000006e898131631616b1779bad70bc200000000000000000000000000000000000000000000000000000000067106f4500000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000416d386e77ced75ed7c62688f8d0f54b9aca548d508d3bcb7544f7e4dca9fd805c767c90f3076f638ff1adee6e041aee5a3c4545abf078aefdbb72ac76463db76b1c

// actions after decode (8 action):
// c1fb425e00000000000000000000000070bf6634ee8cb27d04478f184b9b8bb13e5f4710000000000000000000000000ee2a03aa6dacf51c18679c516ad5283d8e7c263700000000000000000000000000000000000000000000000000007f74cdacd0df0000000000000000000000000000000000006e898131631616b1779bad70bc200000000000000000000000000000000000000000000000000000000067106f4500000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000416d386e77ced75ed7c62688f8d0f54b9aca548d508d3bcb7544f7e4dca9fd805c767c90f3076f638ff1adee6e041aee5a3c4545abf078aefdbb72ac76463db76b1c
// d92aadfb00000000000000000000000070bf6634ee8cb27d04478f184b9b8bb13e5f4710000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000000000000000000000000001f55c99918ecefcb5eadc11e0a58413e08ff130f38f96d7222b19c0e4d9be7142c02463be0a2b96b0000000000000000000000000000000000000000000000000000000067106e55000000000000000000000000bf19cbf0256f19f39a016a86ff3551ecc6f2aafe0000000000000000000000000000000000000000000000000000000000000120000000000000000000000000ee2a03aa6dacf51c18679c516ad5283d8e7c26370000000000000000000000000000000000000000000000000000395af6275dfe00000000000000000000000000000000000000000000000000000000000000410d047835cec04dac44f56755cccc8f32aaf225ccd7b100edb08c511986e4fab46878c1f6db942268055f16254c5c68866f66b77fb5e131e508a0988d7c2d6b5f1c00000000000000000000000000000000000000000000000000000000000000
// 8d68a15600000000000000000000000070bf6634ee8cb27d04478f184b9b8bb13e5f47100000000000000000000000000000000000000000000000000000000000000aa700000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002cee2a03aa6dacf51c18679c516ad5283d8e7c263700000bb8c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000000000000000000
// 103b48be00000000000000000000000070bf6634ee8cb27d04478f184b9b8bb13e5f4710000000000000000000000000ee2a03aa6dacf51c18679c516ad5283d8e7c263700000000000000000000000000000000000000000000000000000000000011160000000000000000000000003885fbe4cd8aed7b7e9625923927fa1ce30662a30000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000000000
// d92aadfb00000000000000000000000070bf6634ee8cb27d04478f184b9b8bb13e5f4710000000000000000000000000dac17f958d2ee523a2206206994597c13d831ec700000000000000000000000000000000000000000000000000000000b13acacd5eadc11e0a58413e08ff130f38f96d7222b19c0e4d9be7142c02463be0a2b96c0000000000000000000000000000000000000000000000000000000067106e73000000000000000000000000ff8ba4d1fc3762f6154cc942ccf30049a2a0cec60000000000000000000000000000000000000000000000000000000000000120000000000000000000000000ee2a03aa6dacf51c18679c516ad5283d8e7c263700000000000000000000000000000000000000000000000000001cad7b13aeff000000000000000000000000000000000000000000000000000000000000004187eba24314b44783d2ad45f5fdff9927151419a7bda12a1dd44836b55ea9a96645427a4c0b261857baa4215119d815ad314947534874ff0560adccf5e14c70801b00000000000000000000000000000000000000000000000000000000000000
// 8d68a15600000000000000000000000070bf6634ee8cb27d04478f184b9b8bb13e5f4710000000000000000000000000000000000000000000000000000000000000271000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002cdac17f958d2ee523a2206206994597c13d831ec7000001f42260fac5e5542a773aa44fbcfedf7c193bc2c5990000000000000000000000000000000000000000
// 103b48be00000000000000000000000070bf6634ee8cb27d04478f184b9b8bb13e5f47100000000000000000000000002260fac5e5542a773aa44fbcfedf7c193bc2c5990000000000000000000000000000000000000000000000000000000000002710000000000000000000000000ceff51756c56ceffca006cd410b03ffc46dd3a580000000000000000000000000000000000000000000000000000000000001e010000000000000000000000000000000000000000000000000000000000000000
// 38c9c147000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000000000000000000000000000000000000002710000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000242e1a7d4d000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
